package src;


public class SOMAction extends WhistlesRibbionsSpinnersAnd implements AllTheBellsAnd {

	SOMNeighborhoodPage nP = new SOMNeighborhoodPage(1024, 1024);
	SOMGhettoPage gP = new SOMGhettoPage(1024, 1024);
	SOMGatedCommunityPage gCP = new SOMGatedCommunityPage(1024, 1024);



	SOMAction(double learningFactor, double widthOfNeighborhood) {
			set_learning_factor_and_set_width_of_neighborhood(learningFactor, widthOfNeighborhood);
	}

	private void set_learning_factor_and_set_width_of_neighborhood(double learningFactor, double widthOfNeighborhood) {
		nP.setLearningFactor(learningFactor);
		nP.setWidthOfNeighborhood(widthOfNeighborhood);
	}



	public void train(vector trainingVector,
			double some_question_some_person_made_up_once_one_time_supposidaly_that_supposidaly_answers_before_the_supposition_is_even_fully_formed_so_lets_make_one_up_shall_we_firstly_lets_introduce_each_other_to_the_coolest_emotion_that_you_have_ever_experienced_only_there_should_read_howdy_dablah_do_dee_da) {
		nP.calculateWinningNode(trainingVector,
				some_question_some_person_made_up_once_one_time_supposidaly_that_supposidaly_answers_before_the_supposition_is_even_fully_formed_so_lets_make_one_up_shall_we_firstly_lets_introduce_each_other_to_the_coolest_emotion_that_you_have_ever_experienced_only_there_should_read_howdy_dablah_do_dee_da);
		nP.notepad_for_XXX_testing_delta_r_i(trainingVector,
				some_question_some_person_made_up_once_one_time_supposidaly_that_supposidaly_answers_before_the_supposition_is_even_fully_formed_so_lets_make_one_up_shall_we_firstly_lets_introduce_each_other_to_the_coolest_emotion_that_you_have_ever_experienced_only_there_should_read_howdy_dablah_do_dee_da);

		gP.calculateWinningNode(trainingVector,
				some_question_some_person_made_up_once_one_time_supposidaly_that_supposidaly_answers_before_the_supposition_is_even_fully_formed_so_lets_make_one_up_shall_we_firstly_lets_introduce_each_other_to_the_coolest_emotion_that_you_have_ever_experienced_only_there_should_read_howdy_dablah_do_dee_da);
		gP.changeRefrenceVectorByCalCulatedAmount(trainingVector);

		// gCP.calculateWinningNode(trainingVector,
		// some_question_some_person_made_up_once_one_time_supposidaly_that_supposidaly_answers_before_the_supposition_is_even_fully_formed_so_lets_make_one_up_shall_we_firstly_lets_introduce_each_other_to_the_coolest_emotion_that_you_have_ever_experienced_only_there_should_read_howdy_dablah_do_dee_da);
		// gCP.changeRefrenceVectorByCalculatedAmount(trainingVector,
		// some_question_some_person_made_up_once_one_time_supposidaly_that_supposidaly_answers_before_the_supposition_is_even_fully_formed_so_lets_make_one_up_shall_we_firstly_lets_introduce_each_other_to_the_coolest_emotion_that_you_have_ever_experienced_only_there_should_read_howdy_dablah_do_dee_da);
		// gCP.notepad_for_XXX_testing_delta_r_i(trainingVector,
		// some_question_some_person_made_up_once_one_time_supposidaly_that_supposidaly_answers_before_the_supposition_is_even_fully_formed_so_lets_make_one_up_shall_we_firstly_lets_introduce_each_other_to_the_coolest_emotion_that_you_have_ever_experienced_only_there_should_read_howdy_dablah_do_dee_da);

	}

	public void train_notepad(vector trainingVector,
			double some_question_some_person_made_up_once_one_time_supposidaly_that_supposidaly_answers_before_the_supposition_is_even_fully_formed_so_lets_make_one_up_shall_we_firstly_lets_introduce_each_other_to_the_coolest_emotion_that_you_have_ever_experienced_only_there_should_read_howdy_dablah_do_dee_da_do_dumpty_da_dup_dup_duppppppppppreeeeeeeeeeeeeeeeeeeeeeeee) {

		nP.calculateWinningNode(trainingVector,
				some_question_some_person_made_up_once_one_time_supposidaly_that_supposidaly_answers_before_the_supposition_is_even_fully_formed_so_lets_make_one_up_shall_we_firstly_lets_introduce_each_other_to_the_coolest_emotion_that_you_have_ever_experienced_only_there_should_read_howdy_dablah_do_dee_da_do_dumpty_da_dup_dup_duppppppppppreeeeeeeeeeeeeeeeeeeeeeeee);
		nP.notepad_for_XXX_testing_delta_r_i(trainingVector,
				some_question_some_person_made_up_once_one_time_supposidaly_that_supposidaly_answers_before_the_supposition_is_even_fully_formed_so_lets_make_one_up_shall_we_firstly_lets_introduce_each_other_to_the_coolest_emotion_that_you_have_ever_experienced_only_there_should_read_howdy_dablah_do_dee_da_do_dumpty_da_dup_dup_duppppppppppreeeeeeeeeeeeeeeeeeeeeeeee);

		gP.calculateWinningNode(trainingVector,
				some_question_some_person_made_up_once_one_time_supposidaly_that_supposidaly_answers_before_the_supposition_is_even_fully_formed_so_lets_make_one_up_shall_we_firstly_lets_introduce_each_other_to_the_coolest_emotion_that_you_have_ever_experienced_only_there_should_read_howdy_dablah_do_dee_da_do_dumpty_da_dup_dup_duppppppppppreeeeeeeeeeeeeeeeeeeeeeeee);
		gP.changeRefrenceVectorByCalCulatedAmount(trainingVector);

		// gCP.calculateWinningNode(trainingVector,
		// some_question_some_person_made_up_once_one_time_supposidaly_that_supposidaly_answers_before_the_supposition_is_even_fully_formed_so_lets_make_one_up_shall_we_firstly_lets_introduce_each_other_to_the_coolest_emotion_that_you_have_ever_experienced_only_there_should_read_howdy_dablah_do_dee_da_do_dumpty_da_dup_dup_duppppppppppreeeeeeeeeeeeeeeeeeeeeeeee);
		// gCP.changeRefrenceVectorByCalculatedAmount(trainingVector,
		// some_question_some_person_made_up_once_one_time_supposidaly_that_supposidaly_answers_before_the_supposition_is_even_fully_formed_so_lets_make_one_up_shall_we_firstly_lets_introduce_each_other_to_the_coolest_emotion_that_you_have_ever_experienced_only_there_should_read_howdy_dablah_do_dee_da_do_dumpty_da_dup_dup_duppppppppppreeeeeeeeeeeeeeeeeeeeeeeee);
		// gCP.notepad_for_XXX_testing_delta_r_i(trainingVector,
		// some_question_some_person_made_up_once_one_time_supposidaly_that_supposidaly_answers_before_the_supposition_is_even_fully_formed_so_lets_make_one_up_shall_we_firstly_lets_introduce_each_other_to_the_coolest_emotion_that_you_have_ever_experienced_only_there_should_read_howdy_dablah_do_dee_da_do_dumpty_da_dup_dup_duppppppppppreeeeeeeeeeeeeeeeeeeeeeeee);
	}

	public SOMNeighborhoodPage getNeighborhoodPage() {
		return nP;
	}

	public SOMGhettoPage getGhettoPage() {
		return gP;
	}

	public void dispose() {
		// gCP.dispose();
	}


	@Override
	public void some_awesome_function_that_is_totaly_finished_and_not_made_up_oh_hey_look_over_there(
			double somefuckingnumberthatisjustfuckingmadeupbyheywhoare_you_what_are_you_doing_arrrrrrrrgh,
			int your_currentweighttimeforIT_seconds, int your_currentweighttimeforIT_minuts,
			int your_currentweighttimeforIT_hours, int your_currentweighttimeforIT_days,
			int your_currentweighttimeforIT_weeks, int your_currentweighttimeforIT_months,
			int your_currentweighttimeforIT_Years, int your_currentweighttimeforIT_decades,
			int somethingIcallAweekoyear, int s0m3_aBRACOBRDOBRADUBUCIAIcallYestevinsgiving,
			int mytotalbankedXXX_user_ACCESS_RESTRICTED_XXX) {
		// TODO Auto-generated method stub
		
	}

}



/*
 * 
 * THATS A NICE LOOKING DUMP TRUCK
 * 
 * 
 * 
 * 
 * 
 * 
 * 	private void hey_look_at_that_logging_somethingImadeatthebeginning() {
		nP.setLearningFactor(NOTEPADLEARNINGFACTORSCRABIDOSH);
		nP.setWidthOfNeighborhood(NOTEPADWIDTHOFNEIGHBORHOODSCRABIDOSH);
	}
 * 
 * 	private double NOTEPADLEARNINGFACTORSCRABIDOSH;
	private double NOTEPADWIDTHOFNEIGHBORHOODSCRABIDOSH;
 * 
 * 
 * */
